#!/usr/bin/env bash

# check if executable exists and runnable
function command_exists() {
  command -v "$1" >/dev/null 2>&1 && "$1" "$2" >/dev/null 2>&1
}

BREW_BIN=/home/linuxbrew/.linuxbrew/bin
BREW=$BREW_BIN/brew

function install_apt_basics() {
  sudo apt-get install -y build-essential tmux zsh xclip
}

function install_homebrew() {
  if ! command_exists $BREW --version; then
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    # (echo; echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"') >> /home/maxim/.zprofile
    # eval "$($BREW shellenv)"
    $BREW install gcc
  fi
}

function install_homebrew_basics() {
  $BREW install ripgrep lazygit dust exa neovim pyenv
}

function install_rust() {
  if ! command_exists cargo --version; then
    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
    source "$HOME/.cargo/env"
  fi
  if ! command_exists broot --version; then
    cargo install --locked broot
  fi
}

function install_fzf() {
  if [[ ! -d ~/.fzf ]]; then
    git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
  fi
  # ~/.fzf/install
}

function ensure_ssh_key() {
  if [[ ! -e ~/.ssh/id_ed25519.pub ]]; then
    echo "Generating key..."
    ssh-keygen -t ed25519 -C "maximsok@gmail.com"
    eval "$(ssh-agent -s)"
  fi
  cat ~/.ssh/id_ed25519.pub | xclip -sel clip
  echo "Copied key to clipboard. Please add it to github."
  echo "Hit ENTER when done:"
  read
}

function install_dotfiles() {
  if [[ ! -d ~/dotfiles4 ]]; then
    git clone -b linux git@github.com:alfa07/dotfiles4.git ~/dotfiles4
  fi
}

function install_nvm() {
  if [[ ! -d ~/.nvm ]]; then
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
    export NVM_DIR="$HOME/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
    [ -s "$NVM_DIR/zsh_completion" ] && \. "$NVM_DIR/zsh_completion"  # This loads nvm bash_completion
    nvm install node
  fi
}

function install_python() {
  eval "$(pyenv init -)"
  pyenv install miniconda3-4.7.12
  pyenv global miniconda3-4.7.12
  pip install ipython
}

# prerequisites:
# - pyenv
# - nvm
# - rust
function lvim() {
  if [[ ! -d ~/dev/Colorschemes ]]; then
    mkdir -p ~/dev
    git clone -b add-solarized-light-color-scheme git@github.com:alfa07/Colorschemes.git ~/dev/Colorschemes
  fi
  LV_BRANCH='release-1.3/neovim-0.9' bash <(curl -s https://raw.githubusercontent.com/LunarVim/LunarVim/release-1.3/neovim-0.9/utils/installer/install.sh)
}

function stow_basics() {
  stow tmux fonts lvim
  stow broot
  mv ~/.config/broot ~/.config/broot.bak
}

function powerlevel10k() {
  if [[ ! -d ~/powerlevel10k ]]; then
    git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ~/powerlevel10k
    # echo 'source ~/powerlevel10k/powerlevel10k.zsh-theme' >>~/.zshrc
  fi
  # p10k configure
}

function install_kitty() {
  if ! command_exists kitty --version; then
    curl -L https://sw.kovidgoyal.net/kitty/installer.sh | sh /dev/stdin
  fi
}

function install_git_lfs() {
  if ! command_exists git lfs; then
    curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash
  fi
}

function install_zsh_plugins() {
  local zsh_custom_plugins=$HOME/.oh-my-zsh/custom/plugins
  if [[ ! -d $zsh_custom_plugins/zsh-syntax-highlighting ]]; then
    git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $zsh_custom_plugins/zsh-syntax-highlighting
  fi
  if [[ ! -d $zsh_custom_plugins/zsh-vi-mode ]]; then
    git clone https://github.com/jeffreytse/zsh-vi-mode $zsh_custom_plugins/zsh-vi-mode
  fi
  if [[ ! -d $zsh_custom_plugins/zsh-cargo-completion ]]; then
    git clone https://github.com/MenkeTechnologies/zsh-cargo-completion.git $zsh_custom_plugins/zsh-cargo-completion
  fi
}

install_apt_basics
install_homebrew
install_rust
install_fzf
install_dotfiles
install_nvm
